{"version":3,"sources":["../../src/controllers/users.controller.ts"],"sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport { CreateUserDto } from '@dtos/users.dto';\nimport { User } from '@interfaces/users.interface';\nimport userService from '@services/users.service';\n\nclass UsersController {\n  public userService = new userService();\n\n  public getUsers = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const findAllUsersData: User[] = await this.userService.findAllUser();\n\n      res.status(200).json({ data: findAllUsersData, message: 'findAll' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public getUserById = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const userId: string = req.params.id;\n      const findOneUserData: User = await this.userService.findUserById(userId);\n\n      res.status(200).json({ data: findOneUserData, message: 'findOne' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public createUser = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const userData: CreateUserDto = req.body;\n      const createUserData: User = await this.userService.createUser(userData);\n\n      res.status(201).json({ data: createUserData, message: 'created' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public updateUser = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const userId: string = req.params.id;\n      const userData: CreateUserDto = req.body;\n      const updateUserData: User = await this.userService.updateUser(userId, userData);\n\n      res.status(200).json({ data: updateUserData, message: 'updated' });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public checkMobileEmail = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const userMobile: number = req.body.mobile;\n      const userEmail: string = req.body.email;\n\n      if (userMobile) {\n        const isMobileExist: Boolean = await this.userService.checkMobile(userMobile);\n\n        if (isMobileExist) {\n          res.status(200).json({ isMobileExist: isMobileExist, message: `${userMobile} exist in database.` });\n        } else {\n          res.status(200).json({ isMobileExist: isMobileExist, message: `${userMobile} not in database.` });\n        }\n      } else if (userEmail) {\n        const isEmailExist: Boolean = await this.userService.checkEmail(userEmail);\n\n        if (isEmailExist) {\n          res.status(200).json({ isEmailExist: isEmailExist, message: `${userEmail} exist in database.` });\n        } else {\n          res.status(200).json({ isEmailExist: isEmailExist, message: `${userEmail} not in database.` });\n        }\n      }\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public deleteUser = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const userId: string = req.params.id;\n      const deleteUserData: User = await this.userService.deleteUser(userId);\n\n      res.status(200).json({ data: deleteUserData, message: 'deleted' });\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n\nexport default UsersController;\n"],"names":["UsersController","userService","getUsers","req","res","next","findAllUsersData","findAllUser","status","json","data","message","error","getUserById","userId","params","id","findOneUserData","findUserById","createUser","userData","body","createUserData","updateUser","updateUserData","checkMobileEmail","userMobile","mobile","userEmail","email","isMobileExist","checkMobile","isEmailExist","checkEmail","deleteUser","deleteUserData"],"mappings":"AAAA;;;;+BA2FA,SAA+B;;aAA/B,QAA+B;;qDAxFP,2BAAyB;;;;;;AAEjD,IAAA,AAAMA,eAAe,GAArB,MAAMA,eAAe;;QACnB,KAAOC,WAAW,GAAG,IAAIA,aAAW,QAAA,EAAE,AAAC,CAAA;QAEvC,KAAOC,QAAQ,GAAG,OAAOC,GAAY,EAAEC,GAAa,EAAEC,IAAkB,GAAK;YAC3E,IAAI;gBACF,MAAMC,gBAAgB,GAAW,MAAM,IAAI,CAACL,WAAW,CAACM,WAAW,EAAE,AAAC;gBAEtEH,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;oBAAEC,IAAI,EAAEJ,gBAAgB;oBAAEK,OAAO,EAAE,SAAS;iBAAE,CAAC,CAAC;YACvE,EAAE,OAAOC,KAAK,EAAE;gBACdP,IAAI,CAACO,KAAK,CAAC,CAAC;YACd,CAAC;QACH,CAAC,AAAC,CAAA;QAEF,KAAOC,WAAW,GAAG,OAAOV,GAAY,EAAEC,GAAa,EAAEC,IAAkB,GAAK;YAC9E,IAAI;gBACF,MAAMS,MAAM,GAAWX,GAAG,CAACY,MAAM,CAACC,EAAE,AAAC;gBACrC,MAAMC,eAAe,GAAS,MAAM,IAAI,CAAChB,WAAW,CAACiB,YAAY,CAACJ,MAAM,CAAC,AAAC;gBAE1EV,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;oBAAEC,IAAI,EAAEO,eAAe;oBAAEN,OAAO,EAAE,SAAS;iBAAE,CAAC,CAAC;YACtE,EAAE,OAAOC,KAAK,EAAE;gBACdP,IAAI,CAACO,KAAK,CAAC,CAAC;YACd,CAAC;QACH,CAAC,AAAC,CAAA;QAEF,KAAOO,UAAU,GAAG,OAAOhB,GAAY,EAAEC,GAAa,EAAEC,IAAkB,GAAK;YAC7E,IAAI;gBACF,MAAMe,QAAQ,GAAkBjB,GAAG,CAACkB,IAAI,AAAC;gBACzC,MAAMC,cAAc,GAAS,MAAM,IAAI,CAACrB,WAAW,CAACkB,UAAU,CAACC,QAAQ,CAAC,AAAC;gBAEzEhB,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;oBAAEC,IAAI,EAAEY,cAAc;oBAAEX,OAAO,EAAE,SAAS;iBAAE,CAAC,CAAC;YACrE,EAAE,OAAOC,KAAK,EAAE;gBACdP,IAAI,CAACO,KAAK,CAAC,CAAC;YACd,CAAC;QACH,CAAC,AAAC,CAAA;QAEF,KAAOW,UAAU,GAAG,OAAOpB,GAAY,EAAEC,GAAa,EAAEC,IAAkB,GAAK;YAC7E,IAAI;gBACF,MAAMS,MAAM,GAAWX,GAAG,CAACY,MAAM,CAACC,EAAE,AAAC;gBACrC,MAAMI,QAAQ,GAAkBjB,GAAG,CAACkB,IAAI,AAAC;gBACzC,MAAMG,cAAc,GAAS,MAAM,IAAI,CAACvB,WAAW,CAACsB,UAAU,CAACT,MAAM,EAAEM,QAAQ,CAAC,AAAC;gBAEjFhB,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;oBAAEC,IAAI,EAAEc,cAAc;oBAAEb,OAAO,EAAE,SAAS;iBAAE,CAAC,CAAC;YACrE,EAAE,OAAOC,KAAK,EAAE;gBACdP,IAAI,CAACO,KAAK,CAAC,CAAC;YACd,CAAC;QACH,CAAC,AAAC,CAAA;QAEF,KAAOa,gBAAgB,GAAG,OAAOtB,GAAY,EAAEC,GAAa,EAAEC,IAAkB,GAAK;YACnF,IAAI;gBACF,MAAMqB,UAAU,GAAWvB,GAAG,CAACkB,IAAI,CAACM,MAAM,AAAC;gBAC3C,MAAMC,SAAS,GAAWzB,GAAG,CAACkB,IAAI,CAACQ,KAAK,AAAC;gBAEzC,IAAIH,UAAU,EAAE;oBACd,MAAMI,aAAa,GAAY,MAAM,IAAI,CAAC7B,WAAW,CAAC8B,WAAW,CAACL,UAAU,CAAC,AAAC;oBAE9E,IAAII,aAAa,EAAE;wBACjB1B,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;4BAAEqB,aAAa,EAAEA,aAAa;4BAAEnB,OAAO,EAAE,CAAC,EAAEe,UAAU,CAAC,mBAAmB,CAAC;yBAAE,CAAC,CAAC;oBACtG,OAAO;wBACLtB,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;4BAAEqB,aAAa,EAAEA,aAAa;4BAAEnB,OAAO,EAAE,CAAC,EAAEe,UAAU,CAAC,iBAAiB,CAAC;yBAAE,CAAC,CAAC;oBACpG,CAAC;gBACH,OAAO,IAAIE,SAAS,EAAE;oBACpB,MAAMI,YAAY,GAAY,MAAM,IAAI,CAAC/B,WAAW,CAACgC,UAAU,CAACL,SAAS,CAAC,AAAC;oBAE3E,IAAII,YAAY,EAAE;wBAChB5B,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;4BAAEuB,YAAY,EAAEA,YAAY;4BAAErB,OAAO,EAAE,CAAC,EAAEiB,SAAS,CAAC,mBAAmB,CAAC;yBAAE,CAAC,CAAC;oBACnG,OAAO;wBACLxB,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;4BAAEuB,YAAY,EAAEA,YAAY;4BAAErB,OAAO,EAAE,CAAC,EAAEiB,SAAS,CAAC,iBAAiB,CAAC;yBAAE,CAAC,CAAC;oBACjG,CAAC;gBACH,CAAC;YACH,EAAE,OAAOhB,KAAK,EAAE;gBACdP,IAAI,CAACO,KAAK,CAAC,CAAC;YACd,CAAC;QACH,CAAC,AAAC,CAAA;QAEF,KAAOsB,UAAU,GAAG,OAAO/B,GAAY,EAAEC,GAAa,EAAEC,IAAkB,GAAK;YAC7E,IAAI;gBACF,MAAMS,MAAM,GAAWX,GAAG,CAACY,MAAM,CAACC,EAAE,AAAC;gBACrC,MAAMmB,cAAc,GAAS,MAAM,IAAI,CAAClC,WAAW,CAACiC,UAAU,CAACpB,MAAM,CAAC,AAAC;gBAEvEV,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;oBAAEC,IAAI,EAAEyB,cAAc;oBAAExB,OAAO,EAAE,SAAS;iBAAE,CAAC,CAAC;YACrE,EAAE,OAAOC,KAAK,EAAE;gBACdP,IAAI,CAACO,KAAK,CAAC,CAAC;YACd,CAAC;QACH,CAAC,AAAC,CAAA;;CACH;MAED,QAA+B,GAAhBZ,eAAe"}