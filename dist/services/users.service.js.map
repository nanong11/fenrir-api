{"version":3,"sources":["../../src/services/users.service.ts"],"sourcesContent":["import { hash } from 'bcrypt';\nimport { CreateUserDto } from '@dtos/users.dto';\nimport { HttpException } from '@exceptions/HttpException';\nimport { User } from '@interfaces/users.interface';\nimport userModel from '@models/users.model';\nimport { isEmpty } from '@utils/util';\n\nclass UserService {\n  public users = userModel;\n\n  public async findAllUser(): Promise<User[]> {\n    const users: User[] = await this.users.find();\n    return users;\n  }\n\n  public async findUserById(userId: string): Promise<User> {\n    if (isEmpty(userId)) throw new HttpException(400, 'UserId is empty');\n\n    const findUser: User = await this.users.findOne({ _id: userId });\n    if (!findUser) throw new HttpException(409, \"User doesn't exist\");\n\n    return findUser;\n  }\n\n  public async createUser(userData: CreateUserDto): Promise<User> {\n    if (isEmpty(userData)) throw new HttpException(400, 'userData is empty');\n\n    const findUser: User = await this.users.findOne({ email: userData.email });\n    if (findUser) throw new HttpException(409, `This email ${userData.email} already exists`);\n\n    const hashedPassword = await hash(userData.password, 10);\n    const createUserData: User = await this.users.create({ ...userData, password: hashedPassword });\n\n    return createUserData;\n  }\n\n  public async updateUser(userId: string, userData: CreateUserDto): Promise<User> {\n    if (isEmpty(userData)) throw new HttpException(400, 'userData is empty');\n\n    if (userData.email) {\n      const findUser: User = await this.users.findOne({ email: userData.email });\n      if (findUser && findUser._id != userId) throw new HttpException(409, `This email ${userData.email} already exists`);\n    }\n\n    if (userData.password) {\n      const hashedPassword = await hash(userData.password, 10);\n      userData = { ...userData, password: hashedPassword };\n    }\n\n    const updateUserById: User = await this.users.findByIdAndUpdate(userId, { userData });\n    if (!updateUserById) throw new HttpException(409, \"User doesn't exist\");\n\n    return updateUserById;\n  }\n\n  public async checkMobile(userMobile: number): Promise<Boolean> {\n    if (isEmpty(userMobile)) throw new HttpException(400, 'userMobile is empty');\n\n    const findUser: User = await this.users.findOne({ mobile: userMobile });\n\n    return findUser?.mobile === userMobile ? true : false;\n  }\n\n  public async checkEmail(userEmail: string): Promise<Boolean> {\n    if (isEmpty(userEmail)) throw new HttpException(400, 'userEmail is empty');\n\n    const findUser: User = await this.users.findOne({ email: userEmail });\n\n    return findUser?.email === userEmail ? true : false;\n  }\n\n  public async deleteUser(userId: string): Promise<User> {\n    const deleteUserById: User = await this.users.findByIdAndDelete(userId);\n    if (!deleteUserById) throw new HttpException(409, \"User doesn't exist\");\n\n    return deleteUserById;\n  }\n}\n\nexport default UserService;\n"],"names":["UserService","findAllUser","users","find","findUserById","userId","isEmpty","HttpException","findUser","findOne","_id","createUser","userData","email","hashedPassword","hash","password","createUserData","create","updateUser","updateUserById","findByIdAndUpdate","checkMobile","userMobile","mobile","checkEmail","userEmail","deleteUser","deleteUserById","findByIdAndDelete","userModel"],"mappings":"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"}